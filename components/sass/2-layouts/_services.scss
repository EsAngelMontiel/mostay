@use '../1-base/mixins' as m;

.services {
  .cover {
    position: relative;
    height: 70vh; width: 100% ;
    @include m.flex(column, center, center, nowrap);
    background-color: var(--color-backgrounds) ;
    padding-bottom: var(--spacing-lg);
    &__video {
      width: calc(100% - calc(var(--spacing-lg)*2)) ;
      height: 100% ;  
      position: relative ;
      overflow: hidden;
      background-color: gray ;
      border-radius: var(--radius-md);
      video {
        width: 100% ; height: 100% ;
        position: absolute;
        top: 0;
        left: 0;
        object-fit: cover;
        z-index: 1;
      }
      @include m.breakpoint(lg) {
        width: calc(100% - calc(var(--spacing-md)*2)) ;
      }
      @include m.breakpoint(md) {
        width: calc(100% - calc(var(--spacing-sm)*2)) ;
      }
    }
    > div {
      width: calc(100% - calc(var(--spacing-lg)*2)) ;
      height: 100% ;  
      position: relative ;
      overflow: hidden;
      background-color: gray ;
      border-radius: var(--radius-md);
      img {
        width: 100% ; height: 100% ;
        position: absolute;
        top: 0;
        left: 0;
        object-fit: cover;
        z-index: 1;
      }
      @include m.breakpoint(lg) {
        width: calc(100% - calc(var(--spacing-md)*2)) ;
      }
      @include m.breakpoint(md) {
        width: calc(100% - calc(var(--spacing-sm)*2)) ;
      }
    }
    @include m.breakpoint(lg) {
      height: 60vh;
    }
    @include m.breakpoint(md) {
      height: 50vh;
    }
  }
  .service-header {
    display: grid;
    grid-template-columns: 40% 60% ; 
    gap: 0 ; 
    padding: var(--pading-top-lg) var(--spacing-md);
    h1, h2, p {
      margin-bottom: 1rem ;
    }
    @include m.breakpoint(md) {
      padding: 0 var(--spacing-md) var(--spacing-lg);
      grid-template-columns: 1fr ; 
    }
    p {
      strong {
        font-weight: 500 ;;
      }
    }
  }
  .scroll-section {
    padding: calc(var(--pading-top-lg)*2) 0 ;
    background-color: var(--white);
    > div {
      display: grid;
      grid-template-columns: 60% 35% ; /* 40% para la imagen y 60% para el texto */
      gap: 2rem;
      .image-container {
        position: relative; /* Para limitar el sticky al contenedor */
        img {
          width: 100%; /* Ajusta el ancho de la imagen */
          position: sticky;
          top: 1rem; /* Fija la imagen al hacer scroll */
          border-radius: var(--radius-md);
        }
        @include m.breakpoint(md) {
          position: relative !important; /* Evita el efecto sticky */
          top: auto; /* Resetea el offset */
        }
      }
      .text-container {
        overflow: hidden;
        h3, h2 {
          margin-bottom: 1rem ;
          color: var(--green);
        }
        p {
          margin-bottom: 2rem;
        }
        @include m.breakpoint(md) {
          padding: 1rem 15% ;
        }
      }
      @include m.breakpoint(lg) {
        padding: 0 var(--spacing-md) ;
        grid-template-columns: 60% 35% ; 
      }
      @include m.breakpoint(md) {
        grid-template-columns: 1fr; 
        gap: 1rem; 
        padding: 0 var(--spacing-sm) ;
      }
    }
    @include m.breakpoint(md) {
      padding: var(--spacing-lg) 0 ;
    }
  }

}